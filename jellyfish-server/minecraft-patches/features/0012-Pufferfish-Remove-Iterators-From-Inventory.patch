From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Biquaternions <biquaternions@serlith.net>
Date: Sat, 19 Apr 2025 21:10:44 -0500
Subject: [PATCH] Pufferfish Remove Iterators From Inventory


diff --git a/net/minecraft/world/entity/player/Inventory.java b/net/minecraft/world/entity/player/Inventory.java
index d9cb4f0ed0c4f63362c837aeef3c4194911455c9..1762c0f50a33b1fd60970b7ddf2749f4ecfdc2b7 100644
--- a/net/minecraft/world/entity/player/Inventory.java
+++ b/net/minecraft/world/entity/player/Inventory.java
@@ -439,7 +439,7 @@ public class Inventory implements Container, Nameable {
             }
         }
 
-        for (EquipmentSlot equipmentSlot : EQUIPMENT_SLOT_MAPPING.values()) {
+        for (int i = 0; i < EQUIPMENT_SLOT_MAPPING.size(); i++) { EquipmentSlot equipmentSlot = EQUIPMENT_SLOT_MAPPING.get(i); // Pufferfish - Remove iterators from inventory
             ItemStack itemStack = this.equipment.get(equipmentSlot);
             if (itemStack == stack) {
                 this.equipment.set(equipmentSlot, ItemStack.EMPTY);
@@ -504,13 +504,13 @@ public class Inventory implements Container, Nameable {
 
     @Override
     public boolean isEmpty() {
-        for (ItemStack itemStack : this.items) {
+        for (int i = 0; i < this.items.size(); i++) { ItemStack itemStack = this.items.get(i); // Pufferfish - Remove iterators from inventory
             if (!itemStack.isEmpty()) {
                 return false;
             }
         }
 
-        for (EquipmentSlot equipmentSlot : EQUIPMENT_SLOT_MAPPING.values()) {
+        for (int i = 0; i < EQUIPMENT_SLOT_MAPPING.size(); i++) { EquipmentSlot equipmentSlot = EQUIPMENT_SLOT_MAPPING.get(i); // Pufferfish - Remove iterators from inventory
             if (!this.equipment.get(equipmentSlot).isEmpty()) {
                 return false;
             }
@@ -561,27 +561,55 @@ public class Inventory implements Container, Nameable {
     }
 
     public boolean contains(ItemStack stack) {
-        for (ItemStack itemStack : this) {
+        for (int i  = 0; i < this.items.size(); i++) { ItemStack itemStack = this.items.get(i); // Pufferfish - Remove iterators from inventory
             if (!itemStack.isEmpty() && ItemStack.isSameItemSameComponents(itemStack, stack)) {
                 return true;
             }
         }
+        // Pufferfish start - Remove iterators from inventory
+        for (int i = 0; i < EQUIPMENT_SLOT_MAPPING.size(); i++) {
+            EquipmentSlot equipmentSlot = EQUIPMENT_SLOT_MAPPING.get(i);
+            ItemStack itemStack = this.equipment.get(equipmentSlot);
+            if (!itemStack.isEmpty() && ItemStack.isSameItemSameComponents(itemStack, stack)) {
+                return true;
+            }
+        }
+        // Pufferfish end - Remove iterators from inventory
 
         return false;
     }
 
     public boolean contains(TagKey<Item> tag) {
-        for (ItemStack itemStack : this) {
+        for (int i = 0; i < this.items.size(); i++) { ItemStack itemStack = this.items.get(i); // Pufferfish - Remove iterators from inventory
             if (!itemStack.isEmpty() && itemStack.is(tag)) {
                 return true;
             }
         }
+        // Pufferfish start - Remove iterators from inventory
+        for (int i = 0; i < EQUIPMENT_SLOT_MAPPING.size(); i++) {
+            EquipmentSlot equipmentSlot = EQUIPMENT_SLOT_MAPPING.get(i);
+            ItemStack itemStack = this.equipment.get(equipmentSlot);
+            if (!itemStack.isEmpty() && itemStack.is(tag)) {
+                return true;
+            }
+        }
+        // Pufferfish end - Remove iterators from inventory
 
         return false;
     }
 
     public boolean contains(Predicate<ItemStack> predicate) {
-        for (ItemStack itemStack : this) {
+        // Pufferfish start - Remove iterators from inventory
+        for (int i = 0; i < this.items.size(); i++) {
+            ItemStack itemStack = this.items.get(i);
+            if (predicate.test(itemStack)) {
+                return true;
+            }
+        }
+        for (int i = 0; i < EQUIPMENT_SLOT_MAPPING.size(); i++) {
+            EquipmentSlot equipmentSlot = EQUIPMENT_SLOT_MAPPING.get(i);
+            ItemStack itemStack = this.equipment.get(equipmentSlot);
+            // Pufferfish end - Remove iterators from inventory
             if (predicate.test(itemStack)) {
                 return true;
             }
@@ -605,7 +633,7 @@ public class Inventory implements Container, Nameable {
     }
 
     public void fillStackedContents(StackedItemContents contents) {
-        for (ItemStack itemStack : this.items) {
+        for (int i = 0; i < this.items.size(); i++) { ItemStack itemStack = this.items.get(i); // Pufferfish - Remove iterators from inventory
             contents.accountSimpleStack(itemStack);
         }
     }
