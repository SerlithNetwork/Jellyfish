--- a/pufferfish-server/build.gradle.kts
+++ b/pufferfish-server/build.gradle.kts
@@ -33,9 +_,26 @@
             outputDir = rootDirectory.dir("paper-server")
         }
     }
-    activeFork = pufferfish
     // Pufferfish end - Rebrand
 
+    // Jellyfish start - Rebrand
+    val jellyfish = forks.register("jellyfish") {
+        forks = pufferfish
+        upstream.patchRepo("paperServer") {
+            upstreamRepo = pufferfish.patchedRepo("paperServer")
+            patchesDir = rootDirectory.dir("jellyfish-server/paper-patches")
+            outputDir = rootDirectory.dir("paper-server")
+        }
+        upstream.patchDir("pufferfishServer") {
+            upstreamPath = "pufferfish-server"
+            excludes = setOf("src/minecraft", "paper-patches", "minecraft-patches", "build.gradle.kts", "build.gradle.kts.patch")
+            patchesDir = rootDirectory.dir("jellyfish-server/pufferfish-patches")
+            outputDir = rootDirectory.dir("pufferfish-server")
+        }
+    }
+    activeFork = jellyfish
+    // Jellyfish end - Rebrand
+
     spigot {
         enabled = false
         buildDataRef = "702e1a0a5072b2c4082371d5228cb30525687efc"
@@ -122,10 +_,18 @@
     main {
         java { srcDir("../paper-server/src/main/java") }
         resources { srcDir("../paper-server/src/main/resources") }
+        // Jellyfish start - Rebrand
+        java { srcDir("../pufferfish-server/src/main/java") }
+        resources { srcDir("../pufferfish-server/src/main/resources") }
+        // Jellyfish end - Rebrand
     }
     test {
         java { srcDir("../paper-server/src/test/java") }
         resources { srcDir("../paper-server/src/test/resources") }
+        // Jellyfish start - Rebrand
+        java { srcDir("../pufferfish-server/src/test/java") }
+        resources { srcDir("../pufferfish-server/src/test/resources") }
+        // Jellyfish end - Rebrand
     }
 }
 val log4jPlugins = sourceSets.create("log4jPlugins") {
@@ -153,7 +_,7 @@
 }
 
 dependencies {
-    implementation(project(":pufferfish-api")) // Pufferfish
+    implementation(project(":jellyfish-api")) // Pufferfish
     implementation("ca.spottedleaf:concurrentutil:0.0.3")
     implementation("org.jline:jline-terminal-ffm:3.27.1") // use ffm on java 22+
     implementation("org.jline:jline-terminal-jni:3.27.1") // fall back to jni on java 21
@@ -216,8 +_,8 @@
     implementation("io.papermc:reflection-rewriter-proxy-generator:$reflectionRewriterVersion")
 
     // Spark
-    implementation("com.github.Biquaternions.spark:spark-api:1.1-pufferfish")
-    implementation("com.github.Biquaternions.spark:spark-paper:1.1-pufferfish")
+    implementation("net.serlith.spark:spark-api:1.10.4") // Jellyfish - Custom spark
+    implementation("net.serlith.spark:spark-paper:1.10.4") // Jellyfish - Custom spark
 }
 
 tasks.jar {
@@ -232,14 +_,14 @@
         val gitBranch = git.exec(providers, "rev-parse", "--abbrev-ref", "HEAD").get().trim()
         attributes(
             "Main-Class" to "org.bukkit.craftbukkit.Main",
-            "Implementation-Title" to "Puffernot", // Pufferfish
+            "Implementation-Title" to "Jellyfish", // Pufferfish // Jellyfish
             "Implementation-Version" to implementationVersion,
             "Implementation-Vendor" to date,
-            "Specification-Title" to "Puffernot", // Pufferfish
+            "Specification-Title" to "Jellyfish", // Pufferfish // Jellyfish
             "Specification-Version" to project.version,
-            "Specification-Vendor" to "Pufferfish Host & Serlith Network", // Pufferfish
-            "Brand-Id" to "pufferfish:pufferfish", // Pufferfish
-            "Brand-Name" to "Pufferfish", // Pufferfish
+            "Specification-Vendor" to "Serlith Network", // Pufferfish // Jellyfish
+            "Brand-Id" to "serlith:jellyfish", // Pufferfish // Jellyfish
+            "Brand-Name" to "Jellyfish", // Pufferfish // Jellyfish
             "Build-Number" to (build ?: ""),
             "Build-Time" to buildTime.toString(),
             "Git-Branch" to gitBranch,
