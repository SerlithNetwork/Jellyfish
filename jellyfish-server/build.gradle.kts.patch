--- a/paper-server/build.gradle.kts
+++ b/paper-server/build.gradle.kts
@@ -28,6 +_,18 @@
     //    oldPaperCommit = "f4f275519f7c1fbe9db173b7144a4fe81440e365"
     //}
 
+    // Jellyfish start - Rebrand
+    val jellyfish = forks.register("jellyfish") {
+        upstream.patchDir("paperServer") {
+            upstreamPath = "paper-server"
+            excludes = setOf("src/minecraft", "patches", "build.gradle.kts")
+            patchesDir = rootDirectory.dir("jellyfish-server/paper-patches")
+            outputDir = rootDirectory.dir("paper-server")
+        }
+    }
+    activeFork = jellyfish
+    // Jellyfish end - Rebrand
+
     spigot {
         buildDataRef = "702e1a0a5072b2c4082371d5228cb30525687efc"
         packageVersion = "v1_21_R4" // also needs to be updated in MappingEnvironment
@@ -108,7 +_,21 @@
     }
 }
 
-val log4jPlugins = sourceSets.create("log4jPlugins")
+// Jellyfish start - Rebrand
+sourceSets {
+    main {
+        java { srcDir("../paper-server/src/main/java") }
+        resources { srcDir("../paper-server/src/main/resources") }
+    }
+    test {
+        java { srcDir("../paper-server/src/test/java") }
+        resources { srcDir("../paper-server/src/test/resources") }
+    }
+}
+val log4jPlugins = sourceSets.create("log4jPlugins") {
+    java { srcDir("../paper-server/src/log4jPlugins/java") }
+}
+// Jellyfish end - Rebrand
 configurations.named(log4jPlugins.compileClasspathConfigurationName) {
     extendsFrom(configurations.compileClasspath.get())
 }
@@ -130,7 +_,7 @@
 }
 
 dependencies {
-    implementation(project(":paper-api"))
+    implementation(project(":jellyfish-api")) // Jellyfish
     implementation("ca.spottedleaf:concurrentutil:0.0.3")
     implementation("org.jline:jline-terminal-ffm:3.27.1") // use ffm on java 22+
     implementation("org.jline:jline-terminal-jni:3.27.1") // fall back to jni on java 21
@@ -171,6 +_,12 @@
     runtimeOnly("org.apache.maven.resolver:maven-resolver-connector-basic:1.9.18")
     runtimeOnly("org.apache.maven.resolver:maven-resolver-transport-http:1.9.18")
 
+    // Pufferfish start - Config and flare
+    implementation("com.github.technove:Flare:34637f3f87")
+    // Pufferfish end - Config and flare
+    implementation("net.serlith.ConfigAPI:ConfigAPI-core:1.2.2.1") // Jellyfish - Config API
+    implementation("com.github.ben-manes.caffeine:caffeine:3.2.0") // Jellyfish - Caches
+
     testImplementation("io.github.classgraph:classgraph:4.8.179") // For mob goal test
     testImplementation("org.junit.jupiter:junit-jupiter:5.12.2")
     testImplementation("org.junit.platform:junit-platform-suite-engine:1.12.2")
@@ -190,8 +_,8 @@
     implementation("io.papermc:reflection-rewriter-proxy-generator:$reflectionRewriterVersion")
 
     // Spark
-    implementation("me.lucko:spark-api:0.1-20240720.200737-2")
-    implementation("me.lucko:spark-paper:1.10.133-20250413.112336-1")
+    implementation("net.serlith.spark:spark-api:1.10.0") // Jellyfish - Custom spark
+    implementation("net.serlith.spark:spark-paper:1.10.0") // Jellyfish - Custom spark
 }
 
 tasks.jar {
@@ -206,14 +_,14 @@
         val gitBranch = git.exec(providers, "rev-parse", "--abbrev-ref", "HEAD").get().trim()
         attributes(
             "Main-Class" to "org.bukkit.craftbukkit.Main",
-            "Implementation-Title" to "Paper",
+            "Implementation-Title" to "Jellyfish", // Jellyfish
             "Implementation-Version" to implementationVersion,
             "Implementation-Vendor" to date,
-            "Specification-Title" to "Paper",
+            "Specification-Title" to "Jellyfish", // Jellyfish
             "Specification-Version" to project.version,
-            "Specification-Vendor" to "Paper Team",
-            "Brand-Id" to "papermc:paper",
-            "Brand-Name" to "Paper",
+            "Specification-Vendor" to "Serlith Network", // Jellyfish
+            "Brand-Id" to "serlith:jellyfish", // Jellyfish
+            "Brand-Name" to "Jellyfish", // Jellyfish
             "Build-Number" to (build ?: ""),
             "Build-Time" to buildTime.toString(),
             "Git-Branch" to gitBranch,
@@ -239,6 +_,12 @@
     dependsOn(scanJarForBadCalls)
 }
 
+// Pufferfish start - SIMD Utilities
+tasks.compileJava {
+    options.compilerArgs.add("--add-modules=jdk.incubator.vector")
+}
+// Pufferfish end - SIMD Utilities
+
 // Use TCA for console improvements
 tasks.jar {
     val archiveOperations = services.archiveOperations
@@ -267,7 +_,7 @@
     jvmArgumentProviders.add(provider)
 }
 
-val generatedDir: java.nio.file.Path = layout.projectDirectory.dir("src/generated/java").asFile.toPath()
+val generatedDir: java.nio.file.Path = layout.projectDirectory.dir("../paper-server/src/generated/java").asFile.toPath()
 idea {
     module {
         generatedSourceDirs.add(generatedDir.toFile())
